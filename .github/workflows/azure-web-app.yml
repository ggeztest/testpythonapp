name: Build and Deploy node Python Flask app to Azure
on:
  push:
    branches:
      - master

env:
  AZURE_WEBAPP_NAME: "testpythonapp123"    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: "Application"      # set this to the path to your web app project, defaults to the repository root
  PYTHON_VERSION: '3.6.10'                # set this to the python version to use
  RESOURCEGROUPNAME: "testpythonapp123-rg"
  LOCATION: "South Central US"
  HOSTINGPLANNAME: "testpythonapp123-plan"
  APPINSIGHTLOCATION: "South Central US"
  SKU: "S1 Standard"
  DATABASEACCOUNTID: ""
  DATABASEACCOUNTLOCATION: ""

jobs:
  build:
    name: Build and Run tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install Dependancies
      continue-on-error: false
      run: |
        pip install -r Application/requirements.txt
    - name: Pytest
      continue-on-error: false
      run: |
        pip install pytest && pytest Tests/unit_tests --junitxml=../TestResults/test-results.xml && pip install pycmd && py.cleanup Tests/
    - name: Building web app
      uses: azure/appservice-build@v2-beta
      with:
          source-directory: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          output-directory: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
    - name: Creating artifact directories
      run: |
        mkdir buildartifacts
        mkdir testartifacts
        mkdir deploymenttemplates
    # Archive build artifact
    - name: Archive Application
      uses: montudor/action-zip@v0.1.0
      with:
        args: zip -qq -r ./buildartifacts/Application.zip ./Application
    # Uploading application to artifact store
    - name: Upload Application to Build Artifact
      continue-on-error: false
      uses: actions/upload-artifact@v2
      with:
        name: buildartifacts
        path: buildartifacts
    # Archive Tests        
    - name: Archive Tests
      uses: montudor/action-zip@v0.1.0
      with:
        args: zip -qq -r ./testartifacts/Tests.zip ./Tests
    # Uploading Tests to artifact store
    - name: Upload Tests to Artifact
      continue-on-error: false
      uses: actions/upload-artifact@v2
      with:
        name: testartifacts
        path: testartifacts
    # Archive Arm template
    - name: Archive ArmTemplates
      uses: montudor/action-zip@v0.1.0
      with:
        args: zip -qq -r ./deploymenttemplates/ArmTemplates.zip ./ArmTemplates
    # Uploading Arm Template to artifact store
    - name: Upload Arm templates to Artifact
      continue-on-error: false
      uses: actions/upload-artifact@v2
      with:
        name: deploymenttemplates
        path: deploymenttemplates
  Deploy:
    name: Deploy to azure web app
    needs: build
    runs-on: ubuntu-latest
    steps:
    # Downloading build artifact
    - name: Download Build Artifact
      uses: actions/download-artifact@v2
      continue-on-error: false
      with:
        name: buildartifacts
        path: buildartifacts
    # Unzipping build artifacts
    - name: Unzipping Build Artifact
      uses: montudor/action-zip@v0.1.0
      with:
       args: unzip -qq ./buildartifacts/Application.zip -d .
  # Downloading Arm Template
    - name: Download Arm Template
      uses: actions/download-artifact@v2
      continue-on-error: false
      with:
        name: deploymenttemplates
        path: deploymenttemplates
    # Unzipping Arm Template directory
    - name: Unzipping ARM template
      uses: montudor/action-zip@v0.1.0
      with:
       args: unzip -qq ./deploymenttemplates/ArmTemplates.zip -d .
    # Azure Login
    - name: Azure Login
      uses: azure/login@v1
      continue-on-error: false
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    # Deploy ARM Template
    - name: Deploy ARM Template
      uses: azure/CLI@v1
      continue-on-error: false
      with:
        inlineScript: |
          az group create --name "${{ env.RESOURCEGROUPNAME }}" --location "${{ env.LOCATION }}"
          az deployment group create --resource-group "${{ env.RESOURCEGROUPNAME }}" --template-file ./ArmTemplates/linux-python-webapp-template.json --parameters webAppName="${{ env.AZURE_WEBAPP_NAME }}" hostingPlanName="${{ env.HOSTINGPLANNAME }}" appInsightsLocation="${{ env.APPINSIGHTLOCATION }}" sku="${{ env.SKU }}"
    # Deploy web app
    - name: 'Deploy to Azure WebApp'
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
  FunctionalTests:
    name: Run Functional tests
    runs-on: ubuntu-latest
    needs: Deploy
    steps:
    # Download Test Artifact
    - name: Download Tests
      uses: actions/download-artifact@v2
      continue-on-error: false
      with:
        name: testartifacts
        path: testartifacts
    # Unzipping Test Artifact
    - name: Unzipping Test Artifact
      uses: montudor/action-zip@v0.1.0
      with:
       args: unzip -qq ./testartifacts/Tests.zip -d .
    # Run functional tests
    - name: Run Functional tests
      continue-on-error: false
      run: |
        sudo apt-get install chromium-chromedriver && pip install wheel && pip install selenium && pip install pytest && cd Tests\ && pytest functional_tests/ --webAppUrl=${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/ --junitxml=TestResults/test-results.xml

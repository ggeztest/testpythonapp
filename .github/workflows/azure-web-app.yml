name: Build and Deploy node Python Flask app to Azure
on:
  push:
    branches:
      - master

env:
  AZURE_WEBAPP_NAME: "testpythonapp123"    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: "Application"      # set this to the path to your web app project, defaults to the repository root
  PYTHON_VERSION: '3.6.10'                # set this to the python version to use
  RESOURCEGROUPNAME: "testpythonapp123-rg"
  LOCATION: "South Central US"
  HOSTINGPLANNAME: "testpythonapp123-plan"
  APPINSIGHTLOCATION: "South Central US"
  SKU: "S1 Standard"
  DATABASEACCOUNTID: ""
  DATABASEACCOUNTLOCATION: ""

jobs:
  build:
    name: Build and Run tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install Dependancies
      continue-on-error: false
      run: |
        pip install -r Application/requirements.txt
    - name: Pytest
      continue-on-error: false
      run: |
        pip install pytest && pytest Tests/unit_tests --junitxml=../TestResults/test-results.xml && pip install pycmd && py.cleanup Tests/
    - name: Building web app
      uses: azure/appservice-build@v2-beta
      with:
          source-directory: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          output-directory: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
    - name: Creating artifact directories
      run: |
        mkdir buildartifacts
        mkdir testartifacts
        mkdir deploymenttemplates
    # Archive build artifact
    - name: Archive Application
      uses: montudor/action-zip@v0.1.0
      with:
        args: zip -qq -r ./buildartifacts/Application.zip ./Application
    # Uploading application to artifact store
    - name: Upload Application to Build Artifact
      continue-on-error: false
      uses: actions/upload-artifact@v2
      with:
        name: buildartifacts
        path: buildartifacts
    # Archive Tests        
    - name: Archive Tests
      uses: montudor/action-zip@v0.1.0
      with:
        args: zip -qq -r ./testartifacts/Tests.zip ./Tests
    # Uploading Tests to artifact store
    - name: Upload Tests to Artifact
      continue-on-error: false
      uses: actions/upload-artifact@v2
      with:
        name: testartifacts
        path: testartifacts
    # Archive Arm template
    - name: Archive ArmTemplates
      uses: montudor/action-zip@v0.1.0
      with:
        args: zip -qq -r ./deploymenttemplates/ArmTemplates.zip ./ArmTemplates
    # Uploading Arm Template to artifact store
    - name: Upload Arm templates to Artifact
      continue-on-error: false
      uses: actions/upload-artifact@v2
      with:
        name: deploymenttemplates
        path: deploymenttemplates
  FunctionalTests:
    name: Run Functional tests
    runs-on: windows-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Use Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    # Run functional tests
    - name: Run Functional tests
      continue-on-error: false
      run: |
        $Path = $env:TEMP; $Installer = "chrome_installer.exe"; Invoke-WebRequest "https://dl.google.com/chrome/install/latest/chrome_installer.exe" -OutFile $Path$Installer; Start-Process -FilePath $Path$Installer -Args "/silent /install" -Verb RunAs -Wait; Remove-Item $Path$Installer
        Invoke-WebRequest https://chromedriver.storage.googleapis.com/83.0.4103.39/chromedriver_win32.zip -outFile chromedriver.zip
        Expand-Archive -Path chromedriver.zip
        Remove-Item chromedriver.zip
        pip3 install wheel && pip3 install selenium && pip3 install pytest && pip install chromedriver-binary && cd ./Tests && python3 -m pytest functional_tests/ --webAppUrl=${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/ --junitxml=../TestResults/functional-test-results.xml
